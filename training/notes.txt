serializable - when we have to send data from one jvm to another.
it acts as a marker that data is coming from another jvm.
serializable is a interface with no method in it.

RMI - remote method invocation
HTTP and RMI are used for transferring data to servlet
if servlet wants to listen to client it has to implement remote.

Type of exceptions : 
1.checked - java.lang.exception
2.unchecked - runtime Exception //compiler doesn't force to check these exception

Hotfixing - creating jar file to detect serialVersionId mismatch and correct it with process called patching

RandomAccessFile is used to seek in a file.

transient is used in context of serialisation and deserialisation

HashMap is not thread safe 

All old legacy classes are thread safe
1.Dictionary
2.HashTable
3.Properties
4.Stack
5.Vector

ODBC - open database connection
OCI - oracle caller interface driver - partly written in c++
middleware

ssh - 22
ftp - 21
smtp - 25

data access object process

sql injection - ' OR '1' = '1 - doesn't work with prepare statement

javaFx is successor of swing

awt depends on os widgets

swing is successor of awt.
in swing every key is prefixed with J

Enterprise java bean - EJB or spring bean

MVC - model view and controller

ping google.com
tracert 172.217.166.110 - traces the hop it follows

WAR - web archive
JAR - jar archive

To set a local tomcat server inside eclipse
Window -> Preferences -> Server -> Runtime Environment -> Add ->Apache Tomcat
make sure to check the create new server checkbox
then click next and give the location where tomcat is installed(C:\Program Files (x86)\Apache Software Foundation\Tomcat 8.5 in my case)

Servlet once created doesn't get destroyed automatically
it follows managed life cycle managed by server(tomcat in our case)

Life cycle of servlet
1. Instantiate
2. Init
3. Service - repeatedly get called for each request (internally calls DoGet and DoPost)
4. Destroy

scriplets - <%  %> - use to write java code inside html file.

session handling
jsp/servlet